{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","required","onChange","pattern","useState","id","setId","touched","setToched","hasRequirError","hasValidError","setHasValidError","useEffect","Math","random","toString","slice","htmlFor","classNames","type","placeholder","event","target","onBlur","test","NewMovie","onAdd","count","setCount","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","areFieldsFilled","areFieldsValid","onSubmit","onAddFunction","preventDefault","state","disabled","App","moviesFromServer","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4dc792b4.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  onChange?: React.Dispatch<React.SetStateAction<string>>,\n  pattern?: RegExp\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange = () => {},\n  pattern,\n}) => {\n  const [id, setId] = useState('() =>');\n  const [touched, setToched] = useState(false);\n  const hasRequirError = touched && required && !value;\n  const [hasValidError, setHasValidError] = useState(false);\n\n  useEffect(() => {\n    setId(`${name}-${getRandomDigits()}`);\n  }, []);\n  useEffect(() => {\n    setHasValidError(false);\n  }, [value]);\n\n  const changetextError = () => {\n    if (hasRequirError) {\n      return `${label} is required`;\n    }\n\n    if (hasValidError) {\n      return `${label} is not valid`;\n    }\n\n    return '';\n  };\n\n  const handleBlur = () => {\n    setToched(true);\n\n    if (pattern) {\n      setHasValidError(!pattern.test(value));\n    }\n  };\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasRequirError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={handleBlur}\n        />\n      </div>\n\n      {(hasRequirError || hasValidError) && (\n        <p className=\"help is-danger\">{changetextError()}</p>\n      )}\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype OnAdd = {\n  onAdd: (movie: Movie) => void\n};\n\nexport const NewMovie: React.FC<OnAdd> = ({ onAdd }) => {\n  // eslint-disable-next-line max-len\n  const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n  const [count, setCount] = useState(0);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n  const areFieldsFilled = !title || !imgUrl || !imdbUrl || !imdbId;\n  const areFieldsValid = pattern.test(imdbUrl) && pattern.test(imdbUrl);\n\n  useEffect(() => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  }, [count]);\n\n  const onSubmit = (\n    event: React.FormEvent<HTMLFormElement>,\n    onAddFunction: (movie: Movie) => void,\n  ) => {\n    event.preventDefault();\n\n    const newMovie: Movie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    onAddFunction(newMovie);\n    setCount((state) => state + 1);\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={(event) => onSubmit(event, onAdd)}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={setTitle}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={setDescription}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={setImgUrl}\n        required\n        pattern={pattern}\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={setImdbUrl}\n        required\n        pattern={pattern}\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={setImdbId}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={areFieldsFilled || !areFieldsValid}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n  const onAdd = (movie: Movie) => {\n    setMovies([...movies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={onAdd} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}